#version 450
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_debug_printf : require

layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(r32f, set = 0, binding = 0) uniform image2D uSrc;

layout(r32f, set = 0, binding = 1) uniform image2D uDst;

layout(set = 0, binding = 2) uniform HZBUniforms {
    uint src_width;
    uint src_height;
    uint dst_width;
    uint dst_height;
} hzb_uniform;

void main()
{
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);

    if (gid.x >= int(hzb_uniform.dst_width) || gid.y >= int(hzb_uniform.dst_height)) return;

    ivec2 base = gid * 2;
    ivec2 max_base = ivec2(hzb_uniform.src_width - 1, hzb_uniform.src_height - 1);

    ivec2 s0 = clamp(base + ivec2(0,0), ivec2(0), max_base);
    ivec2 s1 = clamp(base + ivec2(1,0), ivec2(0), max_base);
    ivec2 s2 = clamp(base + ivec2(0,1), ivec2(0), max_base);
    ivec2 s3 = clamp(base + ivec2(1,1), ivec2(0), max_base);

    float d0 = imageLoad(uSrc, s0).r;
    float d1 = imageLoad(uSrc, s1).r;
    float d2 = imageLoad(uSrc, s2).r;
    float d3 = imageLoad(uSrc, s3).r;

    float m = min(min(d0, d1), min(d2, d3));
    imageStore(uDst, gid, vec4(m, 0.0f, 0.0f, 0.0f));
}